@model WebMembership.Models.RegisterViewModel
@{
    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "register-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Sign Up</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
        <div class="input-icon">
            <i class="fa fa-user"></i>
            @Html.TextBoxFor(m => m.Email, new Dictionary<string, object>
{
{ "class" , "form-control placeholder-no-fix" },
{"data-val-remote","Email invalid!"},
            {"data-val-remote-additionalfields","*.Email,*.Email"},
            {"data-val-remote-type","get"},
            {" data-val-remote-url", Url.Action("IsAvailableUser", "Account", new { area = "" })}})

            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
        <div class="input-icon">
            <i class="fa fa-user"></i>
            @Html.PasswordFor(m => m.Password, new { @class = "form-control placeholder-no-fix" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
        <div class="input-icon">
            <i class="fa fa-user"></i>
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control placeholder-no-fix" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="checkbox">
            @Html.CheckBoxFor(m => m.Terms)
            I agree to<a href="http://www.toll.com.au/policies.html#terms" target="_blank">
                Terms
            </a>
            and <a href="http://www.toll.com.au/policies.html#Personal" target="_blank">
                Privacy Policy
            </a>
        </div>
        @Html.ValidationMessageFor(m => m.Terms, "", new { @class = "text-danger" })
    </div>
    <div class="form-actions">
        <a class="btn" href="~/Account/Login"><i class="m-icon-swapleft"></i> Back</a>
        <button type="submit" id="register-submit-btn" class="btn green pull-right">
            Sign Up <i class="m-icon-swapright m-icon-white"></i>
        </button>
    </div>
}

@section scripts
{
    <script>
        $.validator.unobtrusive.adapters.addBool("brequired", "required");
    </script>
}
