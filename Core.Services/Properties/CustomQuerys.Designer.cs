//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Services.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CustomQuerys {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CustomQuerys() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Core.Services.Properties.CustomQuerys", typeof(CustomQuerys).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select count(1)
        ///from
        ///(
        ///{0}
        ///) as A.
        /// </summary>
        internal static string Base_Count_Format {
            get {
                return ResourceManager.GetString("Base_Count_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select b.EVENT_NAME, a.Status, a.insert_date,a.Remark from ExportListenerLog a, LOG_EVENT_MASTER b where groupid = @groupid
        ///and a.EventCode = b.EVENT_CODE order by a.insert_Date desc.
        /// </summary>
        internal static string GetAllExportListenerDetailLog {
            get {
                return ResourceManager.GetString("GetAllExportListenerDetailLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select FullFileName, ExportType, ArchiveFullFileName, Status, insert_date, GroupID, seq, eventcode , remark , Setting_PK,ID 
        ///							into #temp from 
        ///							ExportListenerLog where getdate()- @days &lt; insert_Date 
        ///							select a.groupid, b.event_code into  #temp2 from (select a.groupid, max(b.SEQ) seq from #temp a, LOG_EVENT_MASTER b where a.eventcode = b.EVENT_CODE group by a.groupid) a,
        ///							LOG_EVENT_MASTER b where a.seq = b.seq and EVENT_TYPE = &apos;ExportListern&apos;
        ///							select REVERSE(substring(rever [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllExportListenerLog {
            get {
                return ResourceManager.GetString("GetAllExportListenerLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select FullFileName, ExportType, ArchiveFullFileName, Status, insert_date, GroupID, seq, eventcode , remark , Setting_PK,ID 
        ///into #temp from 
        ///ExportListenerLog (nolock) where getdate()- @days &lt; insert_Date 
        ///
        ///select a.groupid, b.event_code into  #temp2 from (select a.groupid, max(b.SEQ) seq from #temp a, LOG_EVENT_MASTER b where a.eventcode = b.EVENT_CODE group by a.groupid) a,
        ///LOG_EVENT_MASTER b where a.seq = b.seq and EVENT_TYPE = &apos;ExportListern&apos;
        ///
        ///select * from (
        ///select *, @row from (
        ///select REVER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllExportListenerLogPaging {
            get {
                return ResourceManager.GetString("GetAllExportListenerLogPaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select FullFileName, ExportType, ArchiveFullFileName, Status, insert_date, GroupID, seq, eventcode , remark , Setting_PK,ID 
        ///into #temp from 
        ///ExportListenerLog (nolock) where getdate()- @days &lt; insert_Date 
        ///
        ///select a.groupid, b.event_code into  #temp2 from (select a.groupid, max(b.SEQ) seq from #temp a, LOG_EVENT_MASTER b where a.eventcode = b.EVENT_CODE group by a.groupid) a,
        ///LOG_EVENT_MASTER b where a.seq = b.seq and EVENT_TYPE = &apos;ExportListern&apos;
        ///
        ///select count(*) from (
        ///select * from (
        ///select REVE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllExportListenerLogPagingRowCount {
            get {
                return ResourceManager.GetString("GetAllExportListenerLogPagingRowCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #dw_log from [TAPDBHKD05.TOLLGROUP.LOCAL].tgfdw.dbo.DW_to_DI_Integration_Log with (nolock) where Insert_By = &apos;iCON&apos; and Insert_Date &gt; getdate() - @days
        ///
        ///select * into #import_listener_log_temp
        ///from IMPORTLISTENER_DI_LOG with (nolock) 
        ///where jobname like &apos;icon3%&apos; 
        ///	and insert_date &gt; getdate() - @days
        ///	
        ///select cast(dw.Log_PK as varchar(50)) &quot;Log_PK&quot;
        ///	  ,a.[ImportListener_DI_PK]
        ///      ,dw.Keyreference &quot;FullFileName&quot;
        ///	  ,dw.E_BOOKING_NO &quot;e_booking_no&quot;
        ///	  ,dw.insert_date &quot;Icon_insert_dat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllIconIntegration {
            get {
                return ResourceManager.GetString("GetAllIconIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #dw_log from [TAPDBHKD05.TOLLGROUP.LOCAL].tgfdw.dbo.DW_to_DI_Integration_Log with (nolock) where Insert_By = &apos;iCON&apos; and Insert_Date &gt; getdate() - @days
        ///
        ///select * into #import_listener_log_temp
        ///from IMPORTLISTENER_DI_LOG with (nolock) 
        ///where jobname like &apos;icon3%&apos; 
        ///	and insert_date &gt; getdate() - @days
        ///	
        ///select dw.Log_PK
        ///	  ,a.[ImportListener_DI_PK]
        ///      ,dw.Keyreference &quot;FullFileName&quot;
        ///	  ,dw.insert_date &quot;Icon_insert_date&quot;
        ///	  ,dw.E_BOOKING_NO
        ///	  ,dw.[Type]
        ///      ,a.[JobName]
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllIconIntegrationCount {
            get {
                return ResourceManager.GetString("GetAllIconIntegrationCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #dw_log from [TAPDBHKD05.TOLLGROUP.LOCAL].tgfdw.dbo.DW_to_DI_Integration_Log with (nolock) where Insert_By = &apos;iCON&apos; and Insert_Date &gt; getdate() - @days
        ///
        ///select * into #import_listener_log_temp
        ///from IMPORTLISTENER_DI_LOG with (nolock) 
        ///where jobname like &apos;icon3%&apos; 
        ///	and insert_date &gt; getdate() - @days
        ///	
        ///select cast(dw.Log_PK as varchar(50)) &quot;Log_PK&quot;
        ///	  ,a.[ImportListener_DI_PK]
        ///      ,dw.Keyreference &quot;FullFileName&quot;
        ///	  ,dw.E_BOOKING_NO &quot;e_booking_no&quot;
        ///	  ,dw.insert_date &quot;Icon_insert_dat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllIconIntegrationWithFilter {
            get {
                return ResourceManager.GetString("GetAllIconIntegrationWithFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp1 from ImportListenerLog where groupid = @groupid
        ///select c.Mode, a.Status,b.EVENT_name,a.Remark ,max(a.Seq) seq, max(a.insert_date) insert_date ,b.seq eventseq
        /// From #temp1 a left outer join ImportListenerSetting c  on a.Setting_PK = c.Setting_PK, log_event_master  b  where a.groupid = @groupid
        ///and a.eventcode = b.event_code group by c.Mode, a.Status,a.Remark ,b.EVENT_name,b.seq order by b.seq desc
        ///drop table #temp1.
        /// </summary>
        internal static string GetALLImportListenerDetailLog {
            get {
                return ResourceManager.GetString("GetALLImportListenerDetailLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp from ImportListenerlog (nolock) where insert_date &gt; getdate() - @days  and (eventcode = &apos;2-01-000&apos; or IsEndPoint = 1)
        ///select max(eventcode) eventcode, groupid into #temp3 from #temp where IsEndPoint = 1 group by groupid
        ///select ID, GroupID into #temp1 from #temp where eventcode = &apos;2-01-000&apos;
        ///select a.id, a.groupid into #temp2 from #temp a, #temp3 b where a.GroupID = b.GroupID and a.EventCode = b.EventCode
        ///delete a from #temp1 a where a.GroupID in (select distinct groupid from #temp2)
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetALLImportListenerLog {
            get {
                return ResourceManager.GetString("GetALLImportListenerLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select id, GroupID into #temp from ImportListenerlog (nolock) where insert_date &gt; getdate() - 1 and (eventcode = &apos;2-01-000&apos;)
        ///
        ///select  newid()id,
        ///a.GroupID, max(a.EventCode) eventcode
        ///into #temp1 from ImportListenerlog(nolock)  a , #temp  b where a.insert_date &gt; getdate() - 1 and  a.IsEndPoint = 1 and a.GroupID = b.GroupID
        ///group by a.groupid
        ///
        ///update a set a.id = b.id 
        ///from  #temp1 a, ImportListenerlog(nolock) b where
        ///b.insert_date &gt; getdate() - 1 and 
        /// b.groupid = a.groupid and a.EventCode = b.Even [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetALLImportListenerLogPaging {
            get {
                return ResourceManager.GetString("GetALLImportListenerLogPaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp from ImportListenerlog(nolock) where insert_date &gt; getdate() - @days and (eventcode = &apos;2-01-000&apos; or IsEndPoint = 1)
        ///select max(eventcode) eventcode, groupid into #temp3 from #temp where IsEndPoint = 1 group by groupid
        ///select ID, GroupID into #temp1 from #temp where eventcode = &apos;2-01-000&apos;
        ///select a.id, a.groupid into #temp2 from #temp a, #temp3 b where a.GroupID = b.GroupID and a.EventCode = b.EventCode
        ///delete a from #temp1 a where a.GroupID in (select distinct groupid from #temp2)
        ///se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetALLImportListenerLogPaging2 {
            get {
                return ResourceManager.GetString("GetALLImportListenerLogPaging2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp from ImportListenerlog(nolock) where insert_date &gt; getdate() - @days and (eventcode = &apos;2-01-000&apos; or IsEndPoint = 1)
        ///select max(eventcode) eventcode, groupid into #temp3 from #temp where IsEndPoint = 1 group by groupid
        ///select ID, GroupID into #temp1 from #temp where eventcode = &apos;2-01-000&apos;
        ///select a.id, a.groupid into #temp2 from #temp a, #temp3 b where a.GroupID = b.GroupID and a.EventCode = b.EventCode
        ///delete a from #temp1 a where a.GroupID in (select distinct groupid from #temp2)
        ///se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetALLImportListenerLogPaging2RowCount {
            get {
                return ResourceManager.GetString("GetALLImportListenerLogPaging2RowCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select [description] Display,[folderpath] Folderpath 
        ///from ImportListenerSetting 
        ///where jobname = &apos;TGF_PO_Integration_V2&apos;.
        /// </summary>
        internal static string GetAllPOClientReprocess {
            get {
                return ResourceManager.GetString("GetAllPOClientReprocess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp from openquery(&quot;tapdbcnd04.tollgroup.local\dev&quot;, &apos;
        ///select ORDERNO,
        ///	ORDER_SPLIT,
        ///	SUPPLIER_CODE,
        ///	CUSTOMER_ID,
        ///	MAX(RECEIVE_DATE) RECEIVE_DATE,
        ///	MAX(EDI_LAST_EDIT_TIME) EDI_LAST_EDIT_TIME,
        ///	MAX(FTP_RECEIVE_DATE) FTP_RECEIVE_DATE,
        ///	MAX(RECEIVE_DATE_UTC) RECEIVE_DATE_UTC
        ///from  tgf_integration.dbo.TGF_PO_CONTROL_TABLE 
        ///where receive_date &gt; getdate() - @Day and (CUSTOMER_ID in  (select value from DCT_mangement.dbo.usersetting where userid = &apos;&apos;@userid&apos;&apos; and 
        ///DataType = &apos;&apos;TGF_PO_CON [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllPOHeader {
            get {
                return ResourceManager.GetString("GetAllPOHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select tpe.*, CASE WHEN tpe.IsSendExportListener &lt;&gt; 1 then &apos;NO_EXPORT_NEED&apos;
        ///				WHEN tpe.OUTPUT_FILE_NAME IS NOT NULL and tpe.IsSendExportListener = 1 and t2.[Status] IS NULL then &apos;EXPORT_FAILED&apos;
        ///				WHEN tpe.OUTPUT_FILE_NAME IS NOT NULL and tpe.IsSendExportListener = 1 and t2.[Status] IS NOT NULL then &apos;EXPORT_SUCCESS&apos;
        ///				ELSE tpe.FTP_STATUS end as &quot;DI_STATUS&quot;
        ///from TGF_THIRD_PARTY_EVENTS tpe LEFT OUTER JOIN ExportListenerLogShort t2
        ///	on tpe.OUTPUT_FILE_NAME = t2.fullfilename and t2.[Status] = &apos;SUCCESS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllThirdParty {
            get {
                return ResourceManager.GetString("GetAllThirdParty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *, &apos;&apos; &quot;Css&quot; FROM 
        ///(
        ///select &apos;ALL&apos; &quot;FTP_STATUS&quot;, count(*) &quot;STATUS_COUNT&quot; from TGF_THIRD_PARTY_EVENTS where insert_date &gt; getdate() - @days 
        ///UNION
        ///select FTP_STATUS, count(*) from TGF_THIRD_PARTY_EVENTS where insert_date &gt; getdate() - @days group by ftp_status
        ////*
        ///UNION
        ///select &apos;EXPORT_FAILED&apos;, count(*) from TGF_THIRD_PARTY_EVENTS where insert_date &gt; getdate() - @days  and IsSendExportListener = 1 and OUTPUT_FILE_NAME not in 
        ///(select fullfilename from ExportListenerLogShort where [Status] = &apos;SUCCE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllThirdPartyStatus {
            get {
                return ResourceManager.GetString("GetAllThirdPartyStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select TOP 1 Archived_FilePath
        ///from [dbo].[ArchiveFolderLog] with (nolock) 
        ///where archiveSettingPK in (select archiveFolderSettingPK from [dbo].[ArchiveFolderSetting] with (nolock) where FolderPath = @folder )
        ///	and [filename] = @file
        ///order by insert_date desc.
        /// </summary>
        internal static string GetArchiveFilePath {
            get {
                return ResourceManager.GetString("GetArchiveFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT a.[FolderPath]
        ///      ,a.[ExportType]
        ///      ,case when a.ExportTypeDetail_PK is null then a.ExportLocation else b.ExportLocation end ExportLocation
        ///      ,case when a.ExportTypeDetail_PK is null then a.[LoginName] else b.UserName end LoginName
        ///      ,case when a.ExportTypeDetail_PK is null then a.[Password] else b.Password end Password
        ///	  ,case when a.ExportTypeDetail_PK is null then null else b.flex1 end flex1
        ///	  ,case when a.ExportTypeDetail_PK is null then null else b.flex2 end flex2
        ///	  ,cas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetExportTypeDetail {
            get {
                return ResourceManager.GetString("GetExportTypeDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #dw_log from [TAPDBHKD05.TOLLGROUP.LOCAL].tgfdw.dbo.DW_to_DI_Integration_Log with (nolock) where Insert_By = &apos;iCON&apos; and Insert_Date &gt; getdate() - @days
        ///
        ///select * into #import_listener_log_temp_chart
        ///from IMPORTLISTENER_DI_LOG with (nolock) 
        ///where jobname like &apos;icon3%&apos; 
        ///	and insert_date &gt; getdate() - @days
        ///	
        ///select dw.Log_PK
        ///      ,dw.Keyreference &quot;FullFileName&quot;
        ///	  ,dw.insert_date &quot;Icon_insert_date&quot;
        ///      ,a.[JobName]
        ///	  ,a.[Process_PK]
        ///      ,a.[insert_date]
        ///	  ,case when b.[BATCH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetIconIntegrationChartDataset {
            get {
                return ResourceManager.GetString("GetIconIntegrationChartDataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * into #temp From ImportListenerLog a with (nolock) where groupid = @groupid
        ///
        ///select a.FullFileName,a.Setting_PK,a.DIJobName,a.ArchiveFullFileName,a.Status,a.insert_date, 
        ///a.Seq,a.SendToFullName,a.SendToStauts,a.ArchiveStatus,a.GroupID,a.Remark,b.EVENT_NAME, a.ID
        ///From #temp a, log_event_master  b with (nolock) 
        ///where a.eventcode = b.event_code
        ///order by b.seq
        ///
        ///DROP table #temp.
        /// </summary>
        internal static string GetImportListenerLogByGroupID {
            get {
                return ResourceManager.GetString("GetImportListenerLogByGroupID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select a.* into #temp from openquery(&quot;tapdbcnd04.tollgroup.local\dev&quot;, &apos;
        ///select ORDERNO,
        ///	ORDER_SPLIT
        ///from  tgf_integration.dbo.TGF_PO_CONTROL_TABLE 
        ///where receive_date &gt; getdate() - @Day and (CUSTOMER_ID in  (select value from DCT_mangement.dbo.usersetting where userid = &apos;&apos;@userid&apos;&apos; and 
        ///DataType = &apos;&apos;CUSTOMERID&apos;&apos; and Type = &apos;&apos;DBFILTER&apos;&apos; ) or  not exists (select value from DCT_mangement.dbo.usersetting where userid = &apos;&apos;@userid&apos;&apos; and 
        ///DataType = &apos;&apos;CUSTOMERID&apos;&apos; and Type = &apos;&apos;DBFILTER&apos;&apos;))
        ///group by ORDERN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetPOChartByOrderStatus {
            get {
                return ResourceManager.GetString("GetPOChartByOrderStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select CAST(1 as BIT) &quot;REPROCESS&quot;,
        ///	main.BATCH_ID,
        ///	main.ORDER_LINENO,
        ///	main.PRODUCT,
        ///	main.PRE_PROCESS_STATUS,
        ///	main.STAGING_STATUS,
        ///	main.TRANSFER_STATUS,
        ///	main.FTP_RECEIVE_DATE,
        ///	main.COMMENT,
        ///	main.SOURCE_FILE_NAME,
        ///	main.FILE_GENERATED
        ///from TGF_PO_CONTROL_TABLE main with (nolock) 
        ///where main.receive_date &gt; getdate() - @Day
        ///	and main.CUSTOMER_ID = @CUSTOMERID
        ///	and main.ORDERNO = @ORDERNO
        ///	and main.ORDER_SPLIT = @ORDERSPLIT
        ///	and main.SUPPLIER_CODE = @SUPPLIERCODE.
        /// </summary>
        internal static string GetPOGridDetails {
            get {
                return ResourceManager.GetString("GetPOGridDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select TGF_GI_ControlTower_Server_Status_Setting_PK,server_name Server_Name,Setting_detail Setting_Detail
        /// from [dbo].[TGF_GI_ControlTower_Server_Status_Setting] where IsEnabled = 1 and Type = &apos;Service&apos;.
        /// </summary>
        internal static string GetServiceDetail {
            get {
                return ResourceManager.GetString("GetServiceDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from [DI_WK_TEMP].dbo.SHIPMENT_EVENT_MASTER where batch_id = @batchid.
        /// </summary>
        internal static string GetShipmentEventMasterByBatchID {
            get {
                return ResourceManager.GetString("GetShipmentEventMasterByBatchID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select tpe.*, CASE WHEN tpe.IsSendExportListener &lt;&gt; 1 then &apos;NO_EXPORT_NEED&apos;
        ///				WHEN tpe.OUTPUT_FILE_NAME IS NOT NULL and tpe.IsSendExportListener = 1 and t2.[Status] IS NULL then &apos;EXPORT_FAILED&apos;
        ///				WHEN tpe.OUTPUT_FILE_NAME IS NOT NULL and tpe.IsSendExportListener = 1 and t2.[Status] IS NOT NULL then &apos;EXPORT_SUCCESS&apos;
        ///				ELSE tpe.FTP_STATUS end as &quot;DI_STATUS&quot;
        ///from TGF_THIRD_PARTY_EVENTS tpe LEFT OUTER JOIN ExportListenerLogShort t2
        ///	on tpe.OUTPUT_FILE_NAME = t2.fullfilename and t2.[Status] = &apos;SUCCESS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetThirdPartyByPK {
            get {
                return ResourceManager.GetString("GetThirdPartyByPK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select 
        ///tpe.CUSTOMER_NAME,tpe.KEY_REFERENCE, tpe.SHIPMENT_GID, tpe.FTP_STATUS, tpe.MESSAGE_FORMAT, tpe.EVENT_CODE, tpe.INSERT_DATE,  
        ///tpe.BATCH_ID, tpe.CONTROL_NUMBER, tpe.INPUT_FILE_NAME, tpe.OUTPUT_FILE_NAME,tpe.Order_No, tpe.flex1, tpe.flex3, tpe.Process_PK, tpe.Event_PK,
        ///tpe.IsSendExportListener , tpe.START_DATE, tpe.EVENT_DATE,&apos;&apos; DI_STATUS
        /// into #temp from TGF_THIRD_PARTY_EVENTS (nolock) tpe where insert_date &gt; getdate() - @days 
        ///
        ///select * from (
        ///select tpe.CUSTOMER_NAME,tpe.KEY_REFERENCE, tpe.S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetThirdPartyPaging {
            get {
                return ResourceManager.GetString("GetThirdPartyPaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select 
        ///tpe.CUSTOMER_NAME,tpe.KEY_REFERENCE, tpe.SHIPMENT_GID, tpe.FTP_STATUS, tpe.MESSAGE_FORMAT, tpe.EVENT_CODE, tpe.INSERT_DATE,  
        ///tpe.BATCH_ID, tpe.CONTROL_NUMBER, tpe.INPUT_FILE_NAME, tpe.OUTPUT_FILE_NAME,tpe.Order_No, tpe.flex1, tpe.flex3, tpe.Process_PK, tpe.Event_PK,
        ///tpe.IsSendExportListener,tpe.EVENT_DATE
        /// into #temp from TGF_THIRD_PARTY_EVENTS (nolock) tpe where insert_date &gt; getdate() - @days
        ///select count(*) from (
        ///select tpe.CUSTOMER_NAME,tpe.KEY_REFERENCE, tpe.SHIPMENT_GID, tpe.FTP_STATUS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetThridPartyRowCount {
            get {
                return ResourceManager.GetString("GetThridPartyRowCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from (
        ///select a.Id, a.username Name,c.id RoleID, c.name RoleName, (select count(*) from [dbo].[AspNetUsers] ) totalcount,a.Email EmailAddress,
        ///case when (select count(*) from [dbo].[AspNetUserPermissions] where UserId = a.id) &gt; 0  then 1 else 0 end as UserSecurity,
        ///case when (select count(*) from [dbo].[UserSetting] where UserId = a.id) &gt; 0  then 1 else 0 end as DBFilter ,
        ///ROW_number() OVER (ORDER BY A.username) rownum
        ///  from [dbo].[AspNetUsers] a, [dbo].[AspNetUserRoles] b, [dbo].[AspNetRoles [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetUserHeader {
            get {
                return ResourceManager.GetString("GetUserHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select ilt.[Setting_PK],
        ///ilt.[PK],
        ///ilt.[Status],
        ///ilt.[insert_date],
        ///ilt.[insert_user],
        ///ilt.[update_date],
        ///ilt.[update_user],
        ///ilt.[FileFullName],
        ///ilt.[batch_id]
        ///from importListenerToken as ilt where batch_id in (
        ///select batch_id from importListenerToken group by batch_id having COUNT(*) = 1) and Status &lt;&gt; &apos;FINISHED&apos;
        ///and setting_pk in (select distinct setting_pk from ImportListenerSetting where Mode = &apos;Token&apos;) 
        ///and insert_date &lt;= getdate() - (12/24)
        ///.
        /// </summary>
        internal static string TokenStaus_Query {
            get {
                return ResourceManager.GetString("TokenStaus_Query", resourceCulture);
            }
        }
    }
}
